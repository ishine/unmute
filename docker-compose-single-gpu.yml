services:
  traefik:
    image: traefik:v3.3.1
    command:
      # Swarm provider configuration
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      # EntryPoint for HTTP only
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  frontend:
    image: unmute-frontend:latest
    build:
      context: frontend/
      dockerfile: hot-reloading.Dockerfile
    volumes:
      - ./frontend/src:/app/src
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend.priority=10" # lowest priority

  backend:
    image: unmute-backend:latest
    build:
      context: ./
      target: hot-reloading
    volumes:
      - ./unmute:/app/unmute
    environment:
      - KYUTAI_STT_URL=ws://stt:8080
      - KYUTAI_TTS_URL=ws://tts:8080
      - KYUTAI_LLM_URL=http://llm:8000
      - KYUTAI_VOICE_CLONING_URL=http://voice-cloning:8080
      - NEWSAPI_API_KEY=$NEWSAPI_API_KEY
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.backend.middlewares=strip-api"
      - "traefik.http.middlewares.strip-api.replacepathregex.regex=^/api/(.*)"
      - "traefik.http.middlewares.strip-api.replacepathregex.replacement=/$$1"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=80"
      - "traefik.http.routers.backend.priority=100" # higher priority than frontend
      - "prometheus-port=80"

  tts:
    image: moshi-server:latest
    command: ["worker", "--config", "configs/tts-py.toml"]
    build:
      context: services/moshi-server
      ssh:
        - default
      args:
        GITHUB_ORG: $GITHUB_ORG
    environment:
      - TTS_CONFIG=/app/configs/tts.toml
      - NVIDIA_VISIBLE_DEVICES=all
      - HUGGING_FACE_HUB_TOKEN=$HUGGING_FACE_HUB_TOKEN
    volumes:
      - ./volumes/cargo-registry:/root/.cargo/registry
      - ./volumes/tts-release:/app/target/release/
      - ./volumes/uv-cache:/root/.cache/uv
      - /tmp/models/:/models
      - ./volumes/tts-logs:/logs

  stt:
    image: moshi-server:latest
    command: ["worker", "--config", "configs/stt.toml"]
    build:
      context: services/moshi-server
      ssh:
        - default
      args:
        GITHUB_ORG: $GITHUB_ORG
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - HUGGING_FACE_HUB_TOKEN=$HUGGING_FACE_HUB_TOKEN
    volumes:
      - ./volumes/cargo-registry:/root/.cargo/registry
      - ./volumes/stt-release:/app/target/release/
      - ./volumes/uv-cache:/root/.cache/uv
      - /tmp/models/:/models
      - ./volumes/stt-logs:/logs

  llm:
    image: vllm/vllm-openai:v0.8.5.post1
    command:
      [
        "--model=google/gemma-3-1b-it",
        "--max-model-len=8192",
        "--dtype=bfloat16",
        # "--gpu-memory-utilization=0.8"
      ]
    volumes:
      - ./volumes/huggingface-cache:/root/.cache/huggingface"
      - ./volumes/vllm-cache:/root/.cache/vllm
    environment:
      - HUGGING_FACE_HUB_TOKEN=$HUGGING_FACE_HUB_TOKEN
      - NVIDIA_VISIBLE_DEVICES=all

networks:
  default: